name: Build, Test, Dockerize, Push to ECR

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: bank-app-repo
  IMAGE_TAG: latest
  CLUSTER_NAME: bank-app-cluster
  KUBE_NAMESPACE: bank-app

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: bank-app

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Run tests
      - name: Run JUnit tests
        run: ./gradlew clean test

      # Setup AWS profile  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to AWS ECR  
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Build and push docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO:latest .
          docker tag $ECR_REPO:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:latest
      
      # Deploy to EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
      
      # Add external secrets
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Install External Secrets Operator
        run: |
          helm repo add external-secrets https://charts.external-secrets.io
          helm repo update
          helm upgrade --install external-secrets external-secrets/external-secrets \
            --namespace $KUBE_NAMESPACE --create-namespace

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f bank-app/k8s/